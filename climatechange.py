# -*- coding: utf-8 -*-
"""climateChange.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KLVaInCxX0ODNyX58Bg_4CyQex222WzM
"""

import pandas as pd
import numpy as np
dff=pd.read_csv(r"C:\Users\shree\Desktop\code_rain\ml_rainfall_data.csv")
dff

dff.size

dff.shape

df.rename(columns={'(mm) Precipitation (CHIRPS) at Polygon 1, 1981-01-01 to 2023-05-31':'precipitation','Unnamed: 0':'Date'},inplace=True)

dff

dff['rainfall'].describe()

df

df.iloc[:,0:2].describe()

#my
grp=(dff['rainfall'].groupby(by=[dff['year']]))

#my
import matplotlib.pyplot as plt
grp.sum().plot(kind='bar',figsize=(20,12))
plt.xlabel('years')
plt.ylabel('rainfall')
plt.savefig('rainfall_year_wise.jpg')

# year=[]
# for i in range(df.shape[0]):
#     year.append(df.Date.astype(str)[i].split('-')[0])
#     #year.append(df.Date[i].split('-')[0])
df['Date']=pd.to_datetime(df['Date'])

grp=(df.iloc[:,0:2].groupby(by=
                            [df['Date'].dt.year]))

import matplotlib.pyplot as plt
grp.sum().plot(kind='bar',figsize=(20,12))
plt.xlabel('years')
plt.ylabel('precipatation')
plt.savefig('precipitation.jpg')

#my
grp.sum()

grp.sum()

#my
year=dff['year']
# # year.reset_index(drop=True)
columns=year.values
col_year=np.unique(columns)
col_year

year=df['Date'].dt.year
# # year.reset_index(drop=True)
columns=year.values
col_year=np.unique(columns)
col_year

#my
yearwise={}
for i in col_year[0:-1]:
    yearwise[i]=dff.loc[dff.year==i]['rainfall'].ravel()
#     print(i)

#my
year_wise=pd.DataFrame.from_dict(yearwise,orient='index').transpose()
year_wise

#my
year_wise.round(2)

year_wise.head()

#year_wise.set_index()

#All_my
import matplotlib.pyplot as plt
import seaborn as sns
year_wise.boxplot()
plt.ylabel('mm/day',fontsize=20)
plt.xlabel('Year',fontsize=20)
plt.savefig('boxplot_Ryearwise.jpg',bbox_inches='tight',dpi=200)

plt.figure(figsize=(25,15))
sns.boxplot(x='year',y='rainfall',data=dff)
plt.ylabel('mm/day',fontsize=20)
plt.xlabel('Year',fontsize=20)
plt.savefig('boxplot_Rainfall_yearwise.jpg',bbox_inches='tight',dpi=200)

z = np.polyfit(col_year[0:-1],year_wise.sum(), 1)
p = np.poly1d(z)
fig = plt.figure(figsize = (13.33, 7.5),dpi=300)
plt.plot(col_year[0:-1],p(col_year[0:-1]),"r--")
plt.bar(col_year[0:-1],year_wise.sum())
# plt.plot(col_year[0:-1],year_wise.sum().mean())
# year_wise.sum().plot(figsize=(24,12))
plt.ylabel('sum_rainfall')
plt.savefig('sum_rain.jpg',bbox_inches='tight', dpi=300)

import seaborn as sn
fig, ax = plt.subplots(figsize = (25,25))
corr=year_wise.corr()
sn.heatmap(corr, annot = True, robust=True)

import seaborn as sn
fig, ax = plt.subplots(figsize = (25,25))
corr=year_wise.corr()
sn.heatmap(corr, annot = True, robust=True,cmap='viridis')
plt.savefig('heatmap_rainfall_viridis.jpg',bbox_inches='tight', dpi=300)

dates=pd.date_range('01-01-2020','31-12-2020')

year_wise.set_index(dates.month,inplace=True)

year_wise.iloc[0:90,:]

months=np.unique(dates.month.values)
months

year_wise.index.name='month'

year_wise

monthwise=pd.DataFrame(year_wise.groupby('month').sum())

monthwise.head()

y=list(dff['year'].unique())

y

plt.figure(figsize=(25,15))
plt.fontsize='large'
sns.boxplot(x='month',y='rainfall',data=dff)
plt.grid(True, color = 'grey', linewidth = '1.4', axis = 'y', linestyle = '-.')
plt.ylabel('mm/month',fontsize=20)
plt.xlabel('month',fontsize=20)
plt.savefig('boxplot_rainfall_monthwise4.jpg',bbox_inches='tight', dpi=300)























# df.loc[df.Date.dt.year==1990]['precipitation'].ravel()

yearwise={}
for i in col_year[0:-1]:
    yearwise[i]=df.loc[df.Date.dt.year==i]['precipitation'].ravel()
#     print(i)



year_wise=pd.DataFrame.from_dict(yearwise,orient='index').transpose()
year_wise

year_wise.round(2)

# year_wise.set_index(df.Date.dt.month)

year_wise.boxplot(grid = True, figsize=(25,15))
plt.ylabel('mm/day',fontsize=20)
plt.xlabel('Year',fontsize=20)
plt.savefig('boxplot_prec_yearwise.jpg',bbox_inches='tight',dpi=300)

z = np.polyfit(col_year[0:-1],year_wise.sum(), 1)
p = np.poly1d(z)
fig = plt.figure(figsize = (13.33, 7.5),dpi=300)
plt.plot(col_year[0:-1],p(col_year[0:-1]),"r--")
plt.bar(col_year[0:-1],year_wise.sum())
# plt.plot(col_year[0:-1],year_wise.sum().mean())
# year_wise.sum().plot(figsize=(24,12))
plt.ylabel('sum_precipitation')
plt.savefig('sum_prec.jpg',bbox_inches='tight', dpi=300)

import seaborn as sn
fig, ax = plt.subplots(figsize = (25,25))
corr=year_wise.corr()
sn.heatmap(corr, annot = True, robust=True)

dates=pd.date_range('01-01-2020','31-12-2020')

year_wise.set_index(dates.month,inplace=True)

year_wise.iloc[0:90,:]

months=np.unique(dates.month.values)
months

year_wise.index.name='month'

year_wise

monthwise=pd.DataFrame(year_wise.groupby(by='month').sum())

monthwise.T.boxplot(grid = True, figsize=(25,12),fontsize='large')
plt.ylabel('mm/month',fontsize=20)
plt.xlabel('month',fontsize=20)
plt.savefig('boxplot_prec_monthwise.jpg',bbox_inches='tight', dpi=300)

monthwise.round(2)

# fig,ax=plt.subplots(2)
# ax[0].plot(monthwise.loc[:,1990])

fig,ax=plt.subplots(20,figsize=(13.33,20),dpi=300)
# fig.suptitle('precipitation(mm) across the months year wise- Talamalai', fontsize=20)
# for m in monthwise.index:
for y in col_year[0:20]:
    z = np.polyfit(monthwise.index,monthwise.loc[:,y],1)
    p = np.poly1d(z)
    ax[y-1981].plot(monthwise.index,p(monthwise.index),"r--")
    ax[y-1981].bar(monthwise.index,monthwise.loc[:,y])
    ax[y-1981].set_title('Year:'+str(y))

fig.savefig('yearwise across months.jpg')

monthwise.index[6:12]

fig,ax=plt.subplots(12,figsize=(15,18),dpi=300)
# fig.suptitle('precipitation(mm) across the year month wise-Talamalai', fontsize=20)
for m in monthwise.index[0:12]:
    z = np.polyfit(monthwise.columns,monthwise.loc[m,:], 1)
    p = np.poly1d(z)
    ax[m-1].plot(monthwise.columns,p(monthwise.columns),"r--")
    ax[m-1].bar(monthwise.columns,monthwise.loc[m,:])
    ax[m-1].set_title('Month:'+str(m), loc='right', fontsize=12)

for ax in ax.flat:
    ax.set(ylabel='mm/month')

fig.savefig('mm-monthwise(1-6) across years.jpg',bbox_inches='tight')

"""Finding Indices"""

R10mm={}
for i in col_year[0:-1]:
    R10mm[i]=np.sum(year_wise.loc[:,i]>10)

fig=plt.figure(figsize=(24,8))
plt.bar(list(R10mm.keys()),list(R10mm.values()))

import numpy as np
import itertools as itr
CDD=[]
for year in col_year[0:-1]:
    #Import daily rainfall time series#
    rain_series = year_wise.loc[:,year]

    #separate the group of zero values (dry days) in a list of lists#
    d = [list(x[1]) for x in itr.groupby(rain_series, lambda x: x < 1) if x[0]]

    #Count the lengths of different dry spells and maximum dry spell#
    d_len = [len(f) for f in d]
    CDD.append(max(d_len))

#Calculate the mean dry period#
# mean_dry_spell = np.mean(d_len)

plt.figure(figsize=(24,12))
plt.bar(col_year[0:-1],CDD)

# print(x[0],list(x[1]))

import numpy as np
import itertools as itr
CWD=[]
for year in col_year[0:-1]:
    #Import daily rainfall time series#
    rain_series = year_wise.loc[:,year]

    #separate the group of zero values (dry days) in a list of lists#
    d = [list(x[1]) for x in itr.groupby(rain_series, lambda x: x > 10) if x[0]]

    #Count the lengths of different wet spells and maximum wet spell#
    d_len = [len(f) for f in d]
    CWD.append(max(d_len))

#Calculate the mean dry period#
# mean_dry_spell = np.mean(d_len)

plt.figure(figsize=(24,8))
plt.bar(col_year[0:-1],CWD)

# d_len

WD={}
for i in col_year[0:-1]:
    WD[i]=np.sum(year_wise.loc[:,i]>10)
WD

# list(WD.keys())

plt.figure(figsize=(20,10))
z = np.polyfit(list(WD.keys()),list(WD.values()),1)
p = np.poly1d(z)
plt.plot(list(WD.keys()),p(list(WD.keys())),"r--")
plt.bar(WD.keys(),WD.values())
plt.legend(['Wet Days'],fontsize=20)
plt.savefig('WD',bbox_inches='tight')

SDII=np.divide(year_wise.sum().ravel(),list(WD.values()))
plt.figure(figsize=(24,8))
plt.bar(WD.keys(),SDII)

RF_analysis={'year':col_year[0:-1],'R10mm':list(R10mm.values()),'CDD':CDD,'CWD':CWD,'WD':list(WD.values()),'SDII':SDII}
RF_analysis
RFA_df=pd.DataFrame(RF_analysis)
RFA_df.to_csv('RF_analysis.csv')

# https://stackoverflow.com/questions/4325733/save-a-subplot-in-matplotlib
#     https://matplotlib.org/stable/gallery/lines_bars_and_markers/bar_label_demo.html#sphx-glr-gallery-lines-bars-and-markers-bar-label-demo-py
#         https://www.statology.org/pandas-groupby-index/
#             https://www.geeksforgeeks.org/how-to-filter-dataframe-rows-based-on-the-date-in-pandas/
#                 https://devenum.com/how-to-convert-dict-of-different-lengths-to-dataframe/
#                     https://stackoverflow.com/questions/12444716/how-do-i-set-the-figure-title-and-axes-labels-font-size-in-matplotlib

max(year_wise.loc[:,1981])

RX1day=year_wise.describe().loc['max']
plt.figure(figsize=(13.33,7.5),dpi=200)
plt.plot(RX1day.keys(),RX1day.values,linestyle='dotted')
plt.legend(['RX1day'])
plt.ylabel('mm/day',fontsize=10)
plt.savefig('RX1day.jpg',bbox_inches='tight')

RX1day.keys()

from scipy.stats import norm
import seaborn as sns
# year_wise_norm=(year_wise-year_wise.mean())/year_wise.std()

fig,ax=plt.subplots(10,4,figsize=(15,18),dpi=300)
a=ax.ravel()
for idx,ax in enumerate(a):
    year=1982+idx
    data=year_wise_norm.loc[9:10,year]
#     ax.hist(stats.norm(data))
    ax.set_title(year)

#     mu, std = norm.fit(data)
    sns.lineplot(data,norm.pdf(data),ax=ax,markers=True)

    # Plot the PDF.
#     xmin, xmax = plt.xlim()
#     x = np.linspace(xmin, xmax, 100)
#     p = norm.pdf(data, mu, std)
#     ax.plot(p, 'k', linewidth=2)


#     print(year)
#     ax.set_xlabel(xaxes[idx])
#     ax.set_ylabel(yaxes[idx])

plt.tight_layout()
plt.savefig('hist_years',bbox_inches='tight')

plt.figure(figsize=(20,25))
for year in col_year[0:-1]:
    data=year_wise_norm.loc[9:11,year]
    sns.lineplot(data,norm.pdf(data))
plt.legend(labels=col_year[0:-1])
plt.savefig('hist_yea',bbox_inches='tight')

col_year

import seaborn as sns
from scipy import stats
data=year_wise.loc[9:10,2021]

sns.lineplot(data,norm.pdf(data))



x = np.linspace(norm.ppf(0.01),
                norm.ppf(0.99), 100)
sns.lineplot(x, norm.pdf(x),
        lw=5, alpha=0.6, label='norm pdf')

sns.histplot(year_wise.loc[9:11,2021])
plt.show()



from scipy.stats import norm
import seaborn as sns
# year_wise_norm=(year_wise-year_wise.mean())/year_wise.std()

fig,ax=plt.subplots(10,4,figsize=(15,18),dpi=300)
a=ax.ravel()
for idx,ax in enumerate(a):
    year=1982+idx
    data=year_wise.loc[7:8,year]
#     ax.hist(stats.norm(data))
    ax.set_title(year)

#     mu, std = norm.fit(data)
    sns.histplot(data,ax=ax,kde=True)
#     sns.lineplot(data,norm.pdf(data),ax=ax,markers=True)

    # Plot the PDF.
#     xmin, xmax = plt.xlim()
#     x = np.linspace(xmin, xmax, 100)
#     p = norm.pdf(data, mu, std)
#     ax.plot(p, 'k', linewidth=2)


#     print(year)
#     ax.set_xlabel(xaxes[idx])
#     ax.set_ylabel(yaxes[idx])

plt.tight_layout()
plt.savefig('hist_years',bbox_inches='tight')

